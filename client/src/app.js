// Generated by LiveScript 1.3.1
(function(){
  var path, fs, koa, koaStatic, mount, koaRouter, mvc, views, app, pageNotFound, error, router;
  path = require('path');
  fs = require('fs');
  koa = require('koa');
  koaStatic = require('koa-static');
  mount = require('koa-mount');
  koaRouter = require('koa-router');
  mvc = require('heron-mvc');
  views = require('./helpers/views');
  app = koa();
  app.use(koaStatic(path.join(__dirname, '../public')));
  pageNotFound = function*(next){
    yield next;
    if (this.status !== 404) {
      return;
    }
    this.status = 404;
    switch (this.accepts('html', 'json')) {
    case 'html':
      this.type = 'html';
      this.body = yield views.hogan.render('error/404');
      break;
    case 'json':
      this.body = {
        message: 'Page Not Found'
      };
      break;
    default:
      this.type = 'text';
      this.body = 'Page Not Found';
    }
  };
  app.use(pageNotFound);
  if ('development' === app.env) {
    error = function*(next){
      var e;
      try {
        yield next;
      } catch (e$) {
        e = e$;
        e.status == null && (e.status = 500);
        this.status = e.status;
        this.type = 'html';
        this.body = yield views.hogan.render('error/500', {
          message: error.message,
          error: e
        });
        this.app.emit('error', e, this);
      }
    };
    app.use(error);
  }
  if ('production' === app.env) {
    error = function*(next){
      var e;
      try {
        yield next;
      } catch (e$) {
        e = e$;
        this.status = e.status || 500;
        this.type = 'html';
        this.body = yield views.hogan.render('error/500', {
          message: error.message
        });
        this.app.emit('error', e, this);
      }
    };
    app.use(error);
  }
  app.on('error', function(err){
    console.log(err);
    return;
  });
  views.hogan.layout = 'partials/_layout';
  router = new koaRouter();
  mvc.route.load({
    routeDir: path.join(__dirname, './routes'),
    controllerDir: path.join(__dirname, './controllers')
  }, function(data){}, function(data){
    router[data.method]("/" + data.controller + "/" + data.action, data.func);
    if (data.controller === 'home' && data.action === 'index') {
      return router[data.method]("/", data.func);
    }
  });
  app.use(router.middleware());
  module.exports = app;
}).call(this);
