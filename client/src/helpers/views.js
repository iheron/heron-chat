// Generated by LiveScript 1.3.1
(function(){
  var fs, path, co, views, read, view;
  fs = require('fs');
  path = require('path');
  co = require('co');
  views = require('co-views');
  read = function(path$){
    return fs.readFileSync(path$, 'utf8');
  };
  view = (function(){
    view.displayName = 'view';
    var ref$, prototype = view.prototype, constructor = view;
    view.hogan = views(path.join(__dirname, '../../views'), {
      ext: 'hjs',
      map: {
        hjs: 'hogan'
      }
    });
    ref$ = view.hogan;
    ref$.layout = undefined;
    ref$.partials = undefined;
    ref$.render = function(path$, opt){
      var ref$, layout, partials, k, v;
      if (opt) {
        if ((ref$ = opt.layout) != null) {
          layout = ref$;
        }
      }
      if ((ref$ = view.hogan.layout) != null) {
        layout = ref$;
      }
      partials = {};
      if (view.hogan && view.hogan.partials) {
        for (k in ref$ = view.hogan.partials) {
          v = ref$[k];
          partials[k] = v;
        }
      }
      if (opt && opt.partials) {
        for (k in ref$ = opt.partials) {
          v = ref$[k];
          partials[k] = v;
        }
      }
      return function*(){
        var html, opt$, content, tags, yields, i$, len$, item, tag, oTag, cTag, text;
        if (!layout) {
          html = yield view.hogan(path$, opt);
        } else {
          opt$ = opt || {};
          opt$['yield'] = yield view.hogan(path$, opt$);
          opt$.partials = partials;
          content = read(opt$.filename);
          tags = content.match(/({{#yield-\w+}})/g);
          yields = {};
          if (tags) {
            for (i$ = 0, len$ = tags.length; i$ < len$; ++i$) {
              item = tags[i$];
              tag = item.match(/{{#([\w-]+)}}/)[1];
              oTag = "{{#" + tag + "}}";
              cTag = "{{/" + tag + "}}";
              text = content.substring(content.indexOf(oTag) + oTag.length, content.indexOf(cTag));
              yields[tag.replace('yield-', '')] = text;
            }
          }
          opt$.yields = yields;
          html = yield view.hogan(layout, opt$);
        }
        return html;
      };
    };
    function view(){}
    return view;
  }());
  module.exports = view;
}).call(this);
